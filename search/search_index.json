{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to AutoML Platform","text":"<p>Welcome to the AutoML Platform documentation! This project is designed to streamline the entire machine learning lifecycle, from raw data preprocessing to advanced model training and deployment. By leveraging cutting-edge automation techniques and low-level optimizations, this platform delivers high performance, accuracy, and efficiency across a variety of use cases.</p>"},{"location":"#project-overview","title":"Project Overview","text":"<p>The AutoML Platform is a comprehensive solution aimed at simplifying the complexities of machine learning pipelines. It is built to assist data scientists, machine learning engineers, and business analysts in accelerating their workflows while maintaining control over key decision-making steps. The platform automates:</p> <ul> <li>Data Cleaning: Detecting and handling missing, inconsistent, or duplicate data entries.</li> <li>Feature Engineering: Creating meaningful features using domain-specific transformations.</li> <li>Exploratory Data Analysis (EDA): Generating insightful visualizations and metrics.</li> <li>Model Training and Hyperparameter Tuning: Automatically selecting and fine-tuning the best algorithms.</li> <li>Model Evaluation and Selection: Comparing models using standardized metrics and selecting the most optimal one.</li> <li>Report Generation: Delivering clear, comprehensive, and customizable reports for stakeholders.</li> </ul>"},{"location":"#key-features","title":"Key Features","text":"<ol> <li>High Performance: Built with speed and efficiency in mind.</li> <li>Scalable Design: Supports deployment on distributed systems, allowing for parallel processing of tasks.</li> <li>Customizability: While automated, users retain the ability to override and tweak key steps to suit specific needs.</li> <li>Seamless Integration: Designed to work seamlessly with common data storage solutions, cloud platforms, and APIs.</li> <li>User-Friendly Interface: Includes an intuitive web-based interface for real-time monitoring and customization.</li> </ol>"},{"location":"#why-choose-automl-platform","title":"Why Choose AutoML Platform?","text":"<p>Traditional machine learning pipelines can be time-consuming and error-prone. This platform eliminates repetitive tasks and optimizes workflows, allowing teams to focus on creating impactful insights and models. Whether you\u2019re working on fraud detection, customer segmentation, predictive analytics, or any other domain, the AutoML Platform provides the tools to achieve rapid and reliable results.</p>"},{"location":"#documentation-structure","title":"Documentation Structure","text":"<p>This documentation is organized to guide you through every aspect of the platform:</p> <ol> <li>Project Layout: Understand how we structure the codebase of our platform.</li> </ol>"},{"location":"project_layout/","title":"Project Layout","text":"<p>Our project follows a microservice architecture and is managed as a monorepo. The project is designed to scale easily and maintain flexibility by allowing each component or node to operate independently within the same repository. Below is an overview of the project structure:</p>"},{"location":"project_layout/#folder-structure","title":"Folder Structure","text":"<pre><code>mkdocs.yml                  # The configuration file for MkDocs, used to manage the documentation site.\n\nREADME.md                   # The README file for the GitHub repository, providing an overview of the project and  setup instructions.\n\ndocs/                        # Directory containing all the documentation files and assets.\n    index.md                 # The homepage for the documentation, providing an introduction to the project.\n    ...                       # Additional Markdown pages, images, and other files related to documentation.\n\napps/                        # Directory for the implementation of each node in our platform (microservices).\n    ...                       # Each folder here contains the codebase and logic for a specific component or microservice in the platform.\n\n.github/                     # GitHub-related files for automation.\n    workflows/               # Contains GitHub Actions workflows.\n        publish_docs.yaml    # A GitHub Actions workflow for automatically publishing the documentation to GitHub   Pages.\n</code></pre>"},{"location":"project_layout/#explanation-of-project-structure","title":"Explanation of Project Structure","text":"<ul> <li> <p>mkdocs.yml: This is the main configuration file for MkDocs, the tool used to generate and serve the project's documentation. This file contains settings related to the appearance and structure of the documentation, including navigation, themes, and plugins.</p> </li> <li> <p>README.md: The README file provides an overview of the project, its purpose, and how to get started. This is the first place new users or contributors should look for guidance on setting up the environment and understanding the project.</p> </li> <li> <p>docs/: This directory contains all the documentation files for the project. The <code>index.md</code> file is the homepage for the MkDocs site, and other Markdown files can be used to document specific components, usage guides, or technical details. Additionally, images and other assets related to the documentation are placed in this directory.</p> </li> <li> <p>apps/: In this directory, each folder corresponds to a specific microservice or node within the platform. Each microservice is independent, but they are all part of the larger system. This is where the core functionality and business logic of the platform reside.</p> </li> <li> <p>.github/: This directory contains GitHub-related configurations, including workflows for continuous integration and deployment. The <code>workflows/publish_docs.yaml</code> file is a GitHub Actions workflow that automatically publishes the documentation to GitHub Pages whenever updates are pushed to the repository.</p> </li> </ul>"},{"location":"project_layout/#future-enhancements","title":"Future Enhancements","text":"<p>This is just the beginning of our project structure. As the project evolves, we may expand and refine the layout to accommodate new microservices, additional documentation, and more complex workflows. The structure is designed to be flexible and scalable, making it easier to manage as the platform grows.</p>"}]}